services:
  db:
    image: postgres:latest
    domainname: ${POSTGRES_SERVER:-db}
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=${POSTGRES_DATA:-/var/lib/postgresql/data/pgdata}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  db-migrator:
    build:
      context: ./projects
    command: ["bash", "db-migrator.sh"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
  projects:
    build:
      context: ./projects
    restart: always
    env_file:
      - .env
    depends_on:
      db-migrator:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health"]
      interval: 60s
      retries: 5
      start_period: 10s
      timeout: 10s
volumes:
  db-data:
